<project name="cambozola" default="dist" basedir=".">

    <property file="application.properties"/>
    <!-- set global properties for this build -->
    <property name="src" value="src"/>
    <property name="buildroot" value="build"/>
    <property name="build" value="${buildroot}"/>
    <property name="webdoc" value="webdoc"/>
    <property name="dist" value="dist"/>
    <property name="deploy" value="deploy"/>
    <property name="package.base" value="pkg"/>
    <property name="package" value="${package.base}/${app.defName}-${app.version}"/>


    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${package.base}"/>
        <mkdir dir="${package}"/>
        <mkdir dir="${deploy}"/>

        <tstamp>
            <format property="build.date" pattern="d-MMMM-yyyy hh:mm:aa"/>
        </tstamp>

        <!--
            == Move the build number 'tick' on by one
            -->
        <propertyfile file="build.number" comment="Autogenerated - do not modify">
            <entry key="build.tick" type="int" default="0" operation="+" pattern="0000"/>
        </propertyfile>
        <property file="build.number"/>
    </target>


    <target name="compile" depends="init">
        <echo message="Compiling with JVM Version ${java.version}"/>
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}" target="1.1" source="1.2" destdir="${build}" optimize="false" debug="on" includeantruntime="false"/>
        <copy file="application.properties" todir="${build}" overwrite="true"/>
        <!--
            == Add on the build specific info...
            -->
        <echo file="${build}/application.properties" append="true">
            build.tick=${build.tick}
            build.date=${build.date}
        </echo>

        <copy todir="${build}" preservelastmodified="true">
            <fileset dir="${src}">
                <include name="**/*.gif"/>
            </fileset>
        </copy>
    </target>

    <target name="dist" depends="compile">
        <jar jarfile="${dist}/cambozola-plus.jar" basedir="${build}"
             excludes="**/server/,**/.dependency-info/">
            <manifest>
                <attribute name="Main-Class"
                           value="com.cambozolaplus.Viewer"/>
                <attribute name="Permissions"
                           value="all-permissions"/>
            </manifest>
        </jar>
        <jar jarfile="${dist}/cambozola-unsigned.jar" basedir="${build}"
             excludes="**/server/,**/.dependency-info/">
            <manifest>
                <attribute name="Main-Class"
                           value="com.cambozolaplus.Viewer"/>
                <attribute name="Permissions"
                           value="sandbox"/>
            </manifest>
        </jar>
        <jar jarfile="${dist}/cambozola-server.jar"
             basedir="${build}"
             excludes="com/cambozolaplus/*.class,**/.dependency-info/">
            <manifest>
                <attribute name="Main-Class"
                           value="com.cambozolaplus.server.TestServer"/>
            </manifest>
        </jar>
    </target>
	
	<target name="Obfuscate" depends="dist">
		      <taskdef name="yguard"
		      classname="com.yworks.yguard.YGuardTask"
		      classpath="Lib/yguard.jar"/>
		      <yguard>
		      	 <inoutpair in="${dist}/cambozola-plus.jar" out="${dist}/cambozola_plus.jar"/>
		      	 <shrink logfile="${shrinklog}"/>
		      </yguard>
	</target>


    <target name="signdeploy">
        <antcall target="sign"/>
        <antcall target="deploy"/>
    </target>

    <target name="sign" depends="Obfuscate">
        <signjar jar="${dist}/cambozola_plus.jar" alias="cambozola" storepass="${keystore.password}" verbose="true"/>
    </target>

    <target name="deploy">
        <copy todir="${package}">
            <fileset dir="." defaultexcludes="true">
                <exclude name="build/"/>
                <exclude name="${package.base}/"/>
                <exclude name="deploy/"/>
                <exclude name="Docs/README.html"/>
                <!-- These are APW-only files -->
                <exclude name="*.ipr"/>
                <exclude name="*.iml"/>
                <exclude name="*.iws"/>
                <exclude name="*.swp"/>
                <exclude name="*.ppt"/>
                <exclude name="notes.txt"/>
                <exclude name="build.number"/>
                <exclude name="${webdoc}/"/>
                <exclude name="*~"/>
                <exclude name=".*"/>
            </fileset>
        </copy>
        <copy todir="${package}" file="Docs/README.html">
            <filterset>
                <filter token="app.version" value="${app.version}"/>
            </filterset>
        </copy>

        <property name="tarname" value="${deploy}/${app.defName}-${app.version}.tar.gz"/>
        <property name="zipname" value="${deploy}/${app.defName}-${app.version}.zip"/>

        <tar destfile="${tarname}" basedir="${package.base}" compression="gzip"/>
        <zip destfile="${zipname}" basedir="${package.base}"/>

        <copy file="${tarname}" tofile="${deploy}/${app.defName}-latest.tar.gz"/>
        <copy file="${zipname}" tofile="${deploy}/${app.defName}-latest.zip"/>


        <copy file="${package}/README.html" tofile="${deploy}/index.html"/>
    </target>

    <target name="clean">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${package.base}"/>
        <delete dir="${deploy}"/>
    </target>
</project>
